@using Eproject.Areas.Identity.Data;
@using Microsoft.AspNetCore.Identity
@using System.Linq
@using Eproject.Models
@inject UserManager<EprojectUser> UserManager
@{
    ViewData["Title"] = "User Management";
    Layout = "_Layout";
}

<!-- Users List Table -->
<div class="card">
    <div class="card-header">
        <h5 class="card-title">Search Filter</h5>
        <div class="d-flex justify-content-between align-items-center row py-3 gap-3 gap-md-0">
            <div class="col-md-4 user_role"></div>
            <div class="col-md-4 user_plan"></div>
            <div class="col-md-4 user_status"></div>
        </div>
    </div>
    <div class="card-datatable table-responsive">
        <table class="datatables-users table">
            <thead class="table-light">
                <tr>
                    <th></th>
                    <th></th>
                    <th>Name</th>
                    <th>Role</th>
                    <th>Specification</th>
                    <th>Roll Number</th>
                    <th>Class</th>
                    <th>Section</th>
                    <th>Admission Date</th>
                    <th>Status</th>

                    <th>Actions</th>
                </tr>
            </thead>
        </table>
    </div>
    <!-- Offcanvas to add new user -->
    
</div>
@section Scripts {
    <script src="../../assets/js/app-user-list.js"></script>
    <script>
        $(document).ready(function () {
            $('#addNewCCModal').on('show.bs.modal', function (event) {
                // This function will be executed when the modal is about to be shown
                // You can add your JavaScript code here
                console.log('Modal is opening');
                console.log($(event.relatedTarget).data('item-id'));
                $("#faqItem").val($(event.relatedTarget).data('item-id'))
                $.ajax({
                    url: '/faq/json',
                    // Example API endpoint
                    method: 'GET',
                    success: function (data) {
                        var idToQA = data.data.reduce(function (acc, item) {
                            acc[item.id] = {
                                question: item.question,
                                answer: item.answer
                            };
                            return acc;
                        }, {});
                        // Update the result div with the fetched data
                        let obj = idToQA[$(event.relatedTarget).data('item-id')]
                        $('#editQuestion').val(obj['question']);
                        $("#editAnswer").val(obj['answer']);
                    },
                    error: function () {
                        // Handle errors
                        console.log("err")
                    }
                });
                // For example, you can focus on an input field when the modal is opened

            });

        })
    </script>
}